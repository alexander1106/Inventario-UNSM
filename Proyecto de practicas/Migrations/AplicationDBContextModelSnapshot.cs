// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_de_practicas.Data;

#nullable disable

namespace Proyecto_de_practicas.Migrations
{
    [DbContext(typeof(AplicationDBContext))]
    partial class AplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_de_practicas.Models.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoArticuloId")
                        .HasColumnType("int");

                    b.Property<int?>("UbicacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoArticuloId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.ArticuloCampoValor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampoArticuloId")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampoArticuloId");

                    b.ToTable("ArticuloCamposValores");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.CampoArticulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreCampo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoArticuloId")
                        .HasColumnType("int");

                    b.Property<string>("TipoDato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TipoArticuloId");

                    b.ToTable("CamposArticulos");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Facultades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Facultades");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("UbicacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Pisos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FacultadId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacultadId");

                    b.ToTable("Pisos");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.TipoArticulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("ImagenPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoArticulos");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.TipoUbicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoUbicacion");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Traslado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaTraslado")
                        .HasColumnType("datetime2");

                    b.Property<int>("UbicacionDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("UbicacionOrigenId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("UbicacionDestinoId");

                    b.HasIndex("UbicacionOrigenId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Traslado");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Ubicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PisosId")
                        .HasColumnType("int");

                    b.Property<int>("TipoUbicacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PisosId");

                    b.HasIndex("TipoUbicacionId");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoInt")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.UsuarioFacultadRol", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdFacultad")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "IdFacultad", "IdRol");

                    b.HasIndex("IdFacultad");

                    b.HasIndex("IdRol");

                    b.ToTable("UsuarioFacultadRol");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Articulo", b =>
                {
                    b.HasOne("Proyecto_de_practicas.Models.TipoArticulo", "TipoArticulo")
                        .WithMany("Articulos")
                        .HasForeignKey("TipoArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_de_practicas.Models.Ubicacion", "Ubicacion")
                        .WithMany("Articulos")
                        .HasForeignKey("UbicacionId");

                    b.Navigation("TipoArticulo");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.ArticuloCampoValor", b =>
                {
                    b.HasOne("Proyecto_de_practicas.Models.CampoArticulo", "CampoArticulo")
                        .WithMany("CamposValores")
                        .HasForeignKey("CampoArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampoArticulo");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.CampoArticulo", b =>
                {
                    b.HasOne("Proyecto_de_practicas.Models.TipoArticulo", "TipoArticulo")
                        .WithMany("Campos")
                        .HasForeignKey("TipoArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoArticulo");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Inventario", b =>
                {
                    b.HasOne("Proyecto_de_practicas.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_de_practicas.Models.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Pisos", b =>
                {
                    b.HasOne("Proyecto_de_practicas.Models.Facultades", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Traslado", b =>
                {
                    b.HasOne("Proyecto_de_practicas.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proyecto_de_practicas.Models.Ubicacion", "UbicacionDestino")
                        .WithMany()
                        .HasForeignKey("UbicacionDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proyecto_de_practicas.Models.Ubicacion", "UbicacionOrigen")
                        .WithMany()
                        .HasForeignKey("UbicacionOrigenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proyecto_de_practicas.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("UbicacionDestino");

                    b.Navigation("UbicacionOrigen");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Ubicacion", b =>
                {
                    b.HasOne("Proyecto_de_practicas.Models.Pisos", null)
                        .WithMany("Ubicaciones")
                        .HasForeignKey("PisosId");

                    b.HasOne("Proyecto_de_practicas.Models.TipoUbicacion", "TipoUbicacion")
                        .WithMany()
                        .HasForeignKey("TipoUbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUbicacion");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.UsuarioFacultadRol", b =>
                {
                    b.HasOne("Proyecto_de_practicas.Models.Facultades", "Facultad")
                        .WithMany("UsuariosFacultadesRoles")
                        .HasForeignKey("IdFacultad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_de_practicas.Models.Roles", "Rol")
                        .WithMany("UsuariosFacultadesRoles")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_de_practicas.Models.Usuario", "Usuario")
                        .WithMany("UsuariosFacultadesRoles")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.CampoArticulo", b =>
                {
                    b.Navigation("CamposValores");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Facultades", b =>
                {
                    b.Navigation("UsuariosFacultadesRoles");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Pisos", b =>
                {
                    b.Navigation("Ubicaciones");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Roles", b =>
                {
                    b.Navigation("UsuariosFacultadesRoles");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.TipoArticulo", b =>
                {
                    b.Navigation("Articulos");

                    b.Navigation("Campos");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Ubicacion", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("Proyecto_de_practicas.Models.Usuario", b =>
                {
                    b.Navigation("UsuariosFacultadesRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
